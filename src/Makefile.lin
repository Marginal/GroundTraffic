# -*-Makefile-*-
# Setup for building on Ubuntu x86_64 with multilib support, plus:
# sudo ln -s mesa/libGL.so.1 /usr/lib/i386-linux-gnu/libGL.so
# sudo ln -s libGLU.so.1 /usr/lib/i386-linux-gnu/libGLU.so

include ../version.mak

XPSDK=../../XPSDK302

CC=gcc
#BUILD=-g -DDEBUG
#LDFLAGS=
BUILD=-O3 -s -DNDEBUG
LDFLAGS=-Wl,-x
DEFINES=-DAPL=0 -DIBM=0 -DLIN=1 -DVERSION=$(VERSION)
INC=-I$(XPSDK)/CHeaders/XPLM -I$(XPSDK)/CHeaders/Widgets
CFLAGS=-march=core2 -ffast-math -pipe -Wall -Wdouble-promotion -Winline -Wno-missing-braces -static-libgcc -shared -fPIC -fvisibility=hidden $(BUILD) $(DEFINES) $(INC)

VPATH=
SRC=groundtraffic.c draw.c routes.c planes.c drawdebug.c
LIBS=-lGLU -lGL
TARGETDIR=../$(PROJECT)
INSTALLDIR=~/Desktop/X-Plane\ 10/Custom\ Scenery/KSEA\ Demo\ GroundTraffic/plugins/$(PROJECT)

############################################################################

BUILD_32=$(shell uname)32
OBJS_32=$(addprefix $(BUILD_32)/, $(addsuffix .o, $(basename $(notdir $(SRC)))))
TARGET_32=$(TARGETDIR)/lin.xpl
INSTALL_32=$(INSTALLDIR)
BUILD_64=$(shell uname)64
OBJS_64=$(addprefix $(BUILD_64)/, $(addsuffix .o, $(basename $(notdir $(SRC)))))
TARGET_64=$(TARGETDIR)/64/lin.xpl
INSTALL_64=$(INSTALLDIR)/64
TARGET=$(TARGET_32) $(TARGET_64)

RM=rm -f
CP=cp -p
MD=mkdir -p

.PHONY: all clean install

all:	$(TARGET_32) $(TARGET_64)

install:	$(TARGET_32) $(TARGET_64) | $(INSTALL_32) $(INSTALL_64)
	$(CP) $(TARGET_32) $(INSTALL_32)/
	$(CP) $(TARGET_64) $(INSTALL_64)/

$(TARGET_32):	$(OBJS_32) | $(TARGETDIR)
	$(CC) $(CFLAGS) $(LDFLAGS) -m32 -o $@ $+ $(LIBS)

$(TARGET_64):	$(OBJS_64) | $(TARGETDIR)/64
	$(CC) $(CFLAGS) $(LDFLAGS) -m64 -o $@ $+ $(LIBS)

$(OBJS_32): | $(BUILD_32)

$(OBJS_64): | $(BUILD_64)

$(BUILD_32):
	$(MD) $(BUILD_32)

$(BUILD_64):
	$(MD) $(BUILD_64)

$(BUILD_32)/%.o:	%.c
	$(CC)  $(CFLAGS) -m32 -c -o $@ $<
	@$(CC) $(CFLAGS) -m32 -MM $< | sed -e 's|$*.o|$@|' > $(@:.o=.d)

$(BUILD_64)/%.o:	%.c
	$(CC)  $(CFLAGS) -m64 -c -o $@ $<
	@$(CC) $(CFLAGS) -m64 -MM $< | sed -e 's|$*.o|$@|' > $(@:.o=.d)

$(TARGETDIR):
	$(MD) $(TARGETDIR)

$(TARGETDIR)/64:
	$(MD) $(TARGETDIR)/64

$(INSTALL_32):
	$(MD) $(INSTALL_32)

$(INSTALL_64):
	$(MD) $(INSTALL_64)

clean:
	$(RM) *~ *.bak $(OBJS_32) $(OBJS_32:.o=.d) $(OBJS_64) $(OBJS_64:.o=.d) $(TARGET_32) $(TARGET_64)

# pull in dependency info
-include $(OBJS_32:.o=.d) $(OBJS_64:.o=.d)
